#include <iostream>
#include "lab06.h"

int main() {
  LinkedList* ll = new LinkedList();
  ll->append(0);
  ll->append(1);
  ll->printContents();
  return 0;
}

void LinkedList::append(int data) {
  Node* newx = new Node();
  newx->value = data;
  if (tail != nullptr) newx->before = tail;
  tail = newx;
}
int LinkedList::decapitate() {
  if (tail == nullptr) return -1;
  // only 1 node
  else if (tail->before == nullptr) {
    Node* head = tail;
    int value = tail->value;
    delete head;
    tail == nullptr;
    return value;
  }
  // more than 1
  else tail->decapitate();
}

void LinkedList::clear() {
  if (tail == nullptr) return;
  // only 1 node
  else if (tail->before == nullptr) {
    delete tail;
    tail = nullptr;
  }
  // more than 1
  else tail->before->clear();
}
void LinkedList::printContents() {
  if (tail == nullptr) return;
  tail->printContents();
  std::cout << "empty" << std::endl;
}


int Node::decapitate() {
  if (before->before == nullptr) {
    Node* head = before;
    int value = before->value;
    delete head;
    before == nullptr;
    return value;
  }
  else before->decapitate();
}
void Node::clear() {
  if (before == nullptr) return;
}
void Node::printContents() {
  if (before != nullptr) before->printContents();
  std::cout << value << ":" << std::endl;
}
